a = &b
''''''
def foo(&var): 
	pass

foo(a) # $a is "created" and assigned to null

b = array()
foo(b['b'])
var_dump(array_key_exists('b', b)) # bool(true)

c = new StdClass()
foo(c.d)
var_dump(property_exists(c, 'd')) # bool(true)
''''''
bar =& new fooclass()
foo =& find_var(bar)
''''''
var1 = "Example variable"
var2 = ""

def global_references(use_globals):
    global var1, var2
    if not use_globals:
        var2 =& var1 # visible only inside the function
    else:
        $GLOBALS["var2"] =& var1 # visible also in global context

global_references(false)
echo("var2 is set to '$var2'\n") # var2 is set to ''
global_references(true)
echo("var2 is set to '$var2'\n") # var2 is set to 'Example variable'
''''''
ref = 0
row =& ref
for row in array(1, 2, 3):
	pass # do something
echo(ref) # 3 - last element of the iterated array
''''''
def foo(&var):
    var++

a=5
foo(a)
